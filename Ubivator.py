from .. import loader, utils 


def register(cb):
	cb(KickAllMod())

class KickAllMod(loader.Module):
	"""–õ–æ–º–∞–µ–º –≤—Å–µ."""
	strings = {'name': '–£–±–∏–≤–∞—Ç–æ—Ä–ù–∞—Ö—É–π'}

	async def ubitcmd(self, message):
		"""–ß—Ç–æ –±–ª—è—Ç—å –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ–≥–æ? –ò—Å–ø–æ–ª—å–∑—É–π .ubit  <s>, —á—Ç–æ–±—ã –∫–∏–∫–Ω—É—Ç—å –≤—Å–µ—Ö —Å —á–∞—Ç–∞. –≠—Ç–æ –∫–ª–æ–Ω kickall —è –ø—Ä–æ—Å—Ç–æ –∑–¥–µ–ª–∞–ª –¥–ª—è —Å–µ–±—è"""
		args = utils.get_args_raw(message) 
		silent = False
		if 's' in args: 
			silent = True
			await message.delete()
		else: await message.edit('‚úùÔ∏è–ú–æ–ª–∏—Ç–µ—Å—å –∑–∞ —á–∞—Çüòå [ –í–∞–º –ø–∏–∑–¥–∞ ] ')
		users = await message.client.get_participants(message.chat_id,aggressive=True)
		count = 0
		for user in users:
			try:
				if user.id != message.from_id:
					await message.client.kick_participant(message.chat_id, user.id)
					count += 1
			except: pass
		if silent == True:
			chat = await message.client.get_entity(message.to_id) 
			await message.client.send_message('me', f'<b>–í —á–∞—Ç–µ "{chat.title}" —Å–Ω–µ—Å–µ–Ω–æ {count} –≥—Ä–µ—à–Ω–∏–∫–æ–≤.</b>')
		else: await message.edit(f'<b>–ö–∏–∫–Ω—É—Ç–æ {count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.</b>')
